name: Linux
on: [push]

jobs:
  build:
    runs-on: ${{ matrix.run-on }}
    container: seladb/${{ matrix.image }}
    strategy:
      matrix:
       include:
        #  - image: ubuntu2004
        #    python: python3
        #    run-on: ubuntu-20.04
        #  - image: ubuntu1804
        #    python: python3.8
        #    run-on: ubuntu-20.04
         - image: ubuntu1604
           python: python3.8
           run-on: ubuntu-16.04
        #  - image: centos7
        #    python: python3.8
        #    run-on: ubuntu-16.04
        #  - image: fedora29
        #    python: python3
        #    run-on: ubuntu-20.04

    steps:
    - name: Check linux version
      run: cat /etc/*-release

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Python
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cd Tests/ExamplesTest
        ${{ matrix.python }} -m pip install -U pip
        ${{ matrix.python }} -m pip install -r requirements.txt

    - name: Configure PcapPlusPlus
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: ./configure-linux.sh --default

    - name: Build PcapPlusPlus
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: make all

    - name: Test Packet++
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cd Tests/Packet++Test
        Bin/Packet++Test

    - name: Test Pcap++
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cd Tests/Pcap++Test
        Bin/Pcap++Test -n

    - name: Test Examples
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cd Tests/ExamplesTest
        ${{ matrix.python }} -m pytest

    - name: Build Tutorials
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cd Examples/Tutorials/Tutorial-HelloWorld
        make -f Makefile.non_windows all
        ./Tutorial-HelloWorld