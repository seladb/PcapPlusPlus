add_executable(
  Packet++Test
  main.cpp
  Tests/Asn1Tests.cpp
  Tests/Base64Tests.cpp
  Tests/BgpTests.cpp
  Tests/CiscoHdlcTests.cpp
  Tests/CotpTests.cpp
  Tests/CryptoKeyTests.cpp
  Tests/DhcpTests.cpp
  Tests/DhcpV6Tests.cpp
  Tests/DnsTests.cpp
  Tests/DoIpTests.cpp
  Tests/EthAndArpTests.cpp
  Tests/FtpTests.cpp
  Tests/GreTests.cpp
  Tests/GtpTests.cpp
  Tests/HttpTests.cpp
  Tests/IcmpTests.cpp
  Tests/IcmpV6Tests.cpp
  Tests/IgmpTests.cpp
  Tests/IPSecTests.cpp
  Tests/IPv4Tests.cpp
  Tests/IPv6Tests.cpp
  Tests/LdapTests.cpp
  Tests/LLCTests.cpp
  Tests/ModbusTests.cpp
  Tests/NflogTests.cpp
  Tests/NtpTests.cpp
  Tests/PacketTests.cpp
  Tests/PacketUtilsTests.cpp
  Tests/PemTests.cpp
  Tests/PPPoETests.cpp
  Tests/RadiusTests.cpp
  Tests/S7CommTests.cpp
  Tests/SipSdpTests.cpp
  Tests/Sll2Tests.cpp
  Tests/SllNullLoopbackTests.cpp
  Tests/SmtpTests.cpp
  Tests/SomeIpSdTests.cpp
  Tests/SomeIpTests.cpp
  Tests/SSHTests.cpp
  Tests/SSLTests.cpp
  Tests/StpTests.cpp
  Tests/TcpTests.cpp
  Tests/TelnetTests.cpp
  Tests/TpktTests.cpp
  Tests/VlanMplsTests.cpp
  Tests/VrrpTest.cpp
  Tests/WakeOnLanTests.cpp
  Tests/WireGuardTests.cpp
  Tests/X509Tests.cpp
  Utils/TestUtils.cpp
)

target_link_libraries(
  Packet++Test
  PUBLIC memplumber Packet++ PcppTestUtilities PcppTestFramework EndianPortable
)

if(WIN32)
  # Otherwise winsock2.h will get conflict definitions with windows.h
  target_compile_definitions(Packet++Test PUBLIC WIN32_LEAN_AND_MEAN)
endif()

target_include_directories(Packet++Test PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}")

if(MSVC)
  # This executable requires getopt.h not available on VStudio
  target_link_libraries(Packet++Test PRIVATE Getopt-for-Visual-Studio)
endif()

add_custom_command(
  TARGET Packet++Test
  POST_BUILD
  COMMAND
    ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_SOURCE_DIR}/PacketExamples
    $<TARGET_FILE_DIR:Packet++Test>/PacketExamples
)

add_custom_command(
  TARGET Packet++Test
  POST_BUILD
  COMMAND
    ${CMAKE_COMMAND} -E copy "${CMAKE_CURRENT_SOURCE_DIR}/../../3rdParty/OUIDataset/PCPP_OUIDataset.json"
    "$<TARGET_FILE_DIR:Packet++Test>/PCPP_OUIDataset.json"
)

# set_property(TARGET Packet++Test PROPERTY RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/Bin")
# set_property(TARGET Packet++Test PROPERTY RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_CURRENT_SOURCE_DIR}/Bin")
# set_property(TARGET Packet++Test PROPERTY RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_CURRENT_SOURCE_DIR}/Bin")
# add_test(NAME Packet++Test COMMAND $<TARGET_FILE:Packet++Test> WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/)
add_test(NAME Packet++Test COMMAND $<TARGET_FILE:Packet++Test> WORKING_DIRECTORY $<TARGET_FILE_DIR:Packet++Test>)
