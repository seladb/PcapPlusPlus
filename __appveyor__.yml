version: 1.0.{build}

environment:
  NPCAP_USERNAME:
    secure: iVuVl18E7ZfsuRjz0YKJKQ==
  NPCAP_PASSWORD:
    secure: 8sWBrDudyutFv+4Eq6teJA==
  PYTHON: "C:\\Python38-x64"
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      compiler: mingw32
    - compiler: mingw-w64
      pcap_lib: npcap
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      compiler: vs2017
      platform: x86
      config: Debug
      pcap_lib: npcap
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      compiler: vs2017
      platform: x64
      config: Release
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      compiler: vs2019
      platform: x86
      config: Release
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      compiler: vs2019
      platform: x64
      config: Debug
      use_zstd: true
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      compiler: vs2015
      platform: x86
      config: Debug
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      compiler: vs2015
      platform: x86
      config: Release
      use_zstd: true
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      compiler: vs2015
      platform: x64
      config: Debug
      pcap_lib: npcap
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      compiler: vs2015
      platform: x64
      config: Release
      pcap_lib: npcap


init:
- set PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%

install:
- if "%pcap_lib%"=="npcap" (ci\install_npcap.bat) else (ci\install_winpcap.bat)
- if "%compiler%"=="mingw32" set PATH=%PATH%;C:\MinGW\bin&& appveyor DownloadFile http://ftp.ntua.gr/mirror/mingw/MinGW/Base/pthreads-w32/pthreads-w32-2.10-pre-20160821-1/pthreads-GC-w32-2.10-mingw32-pre-20160821-1-dev.tar.xz && 7z e pthreads-GC-w32-2.10-mingw32-pre-20160821-1-dev.tar.xz -oC:\pthreads && 7z x C:\pthreads\pthreads-GC-w32-2.10-mingw32-pre-20160821-1-dev.tar -oC:\pthreads && xcopy /Y C:\pthreads\include\* C:\MinGW\include && xcopy /Y C:\pthreads\lib\* C:\MinGW\lib
- if "%compiler%"=="mingw-w64" set PATH=%PATH%;C:\mingw-w64\i686-6.3.0-posix-dwarf-rt_v5-rev1\mingw32\bin
- if "%compiler:~0,4%"=="vs20" powershell -command "Invoke-WebRequest ftp://sourceware.org/pub/pthreads-win32/pthreads-w32-2-9-1-release.zip -OutFile pthreads-w32-2-9-1-release.zip" && 7z x pthreads-w32-2-9-1-release.zip -oC:\pthreads
- if "%use_zstd%"=="true" ci\install_zstd.bat %platform%
- "python -m pip install --upgrade pip"
- "python -m pip install -r C:\\projects\\PcapPlusPlus\\Tests\\ExamplesTest\\requirements.txt"
- if "%compiler%"=="mingw32" python ci\patch_mingw.py

before_build:
- if "%pcap_lib%"=="npcap" (set PCAP_SDK_DIR=C:\Npcap-sdk) else (set PCAP_SDK_DIR=C:\WpdPack)
- cd C:\projects\PcapPlusPlus
- if "%compiler%"=="mingw32" configure-windows-mingw.bat mingw32 -m C:\MinGW -w %PCAP_SDK_DIR%
- if "%compiler%"=="mingw-w64" configure-windows-mingw.bat mingw-w64 -m C:\mingw-w64\i686-6.3.0-posix-dwarf-rt_v5-rev1 -w %PCAP_SDK_DIR% -s C:\msys64\mingw32
- if "%use_zstd%"=="true" set ZSTD_HOME_PARAM=-z C:\zstd
- if "%compiler:~0,4%"=="vs20" configure-windows-visual-studio.bat -v %compiler% -w %PCAP_SDK_DIR% -p C:\pthreads %ZSTD_HOME_PARAM%

build_script:
- if "%compiler%"=="mingw32" mingw32-make all
- if "%compiler%"=="mingw-w64" mingw32-make all
- if "%compiler:~0,4%"=="vs20" powershell -command "msbuild mk\%compiler%\PcapPlusPlus.sln /p:Configuration=%config% /p:Platform=%platform%"
- if "%compiler:~0,4%"=="vs20" powershell -command "msbuild mk\%compiler%\PcapPlusPlus-Examples.sln /p:Configuration=%config% /p:Platform=%platform%"
- if "%compiler:~0,4%"=="vs20" powershell -command "msbuild mk\%compiler%\Tutorials.sln /p:Configuration=%config% /p:Platform=%platform%"

test_script:
- cd C:\projects\PcapPlusPlus\Tests\Packet++Test
- Bin\Packet++Test.exe
- cd ..\Pcap++Test
- Bin\Pcap++Test.exe -n
- cd ..\ExamplesTest
- ..\..\ci\find_ip.bat
- "python -m pytest --interface %NetworkIP%"
